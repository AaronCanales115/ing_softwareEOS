<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="msMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAOw4AADsOAFxK8o4AAADSklE
        QVR4Xu3ZvU5VQRTF8WsFPgI8BYWEhkIbrXxHbLAj4WkM+EUsNPoSulfiTq6TAWfu+Zo98/8lqwGbmbXg
        noM7AAAAAAAAAAAAAAAAAAAAAADKPLec/s2xvoB/dHs/zyyXllvLR8u95cZyYdH3Rtf9/ehwXyy/k3y2
        vLaM7q3lwZLej4ZwbglNv8q07PRwHg1j5BGo/G+W3N0o15bQHwf6PNOSc4fzfLWMOIL/la/o7nSHYZ1Y
        7iy5w+1ntBGUlK/o7nSHYR1Z9ECTO1yaUT4OSstXriy6w9D0NKsHvtwB0/T+m6CmfP30n1nC06uMSs29
        CeTS6whqytfr4EtLN0YfwdDlu1FHQPl7RhsB5WeMMgLKf0LvI6D8Ar2OgPIr9DYCyj9ALyOg/Amij4Dy
        ZxB1BJQ/o2gjoPwFRBkB5S+o9RFQ/gpaHQHlr6i1EVD+BloZAeVvaOsRUH4DthoB5Tdk7RFQfoPWGgHl
        N2zpEVB+AEuNgPIDmXsElB/QXCOg/MCmjoDyO3DICN5YKL8jtSP4YfmVfO2xUH4QtSMoCeUHM+cIKD+o
        OUZA+cFNGQHld0Qj0ANfruhc9G9fWdAJveqVPu0r+rd6RUQHat7z91P6fwdo2KHlexhBYFPL9zCCgOYq
        38MIAqkp/7vlZ/K1x8IIAqgpX+/5etVTqaV/J2AEDastf/+PPIwguCnlS+1fDBlBQ6aW7xhBQHOV7xhB
        IHOX7xhBAEuV7xhBw5Yu3zGCBq1VvmMEDVm7fMcIGrBV+Y4RbGjr8h0j2EAr5TtGsKLWyneMYAWtlu8Y
        wYJaL98xggVEKd8xghlFK98xghlELd8xggmil+8YwQF6Kd8xggq9le8YQYFey3eM4Am9l+8YQcYo5TtG
        sGe08h0jMKOW74YewaXlwZI7aJoey3c+ApWbO3uaT5ZzS2jHlltL7oBpei7f1Y7g2qI7DOvUcm/JHW4/
        I5Tvaj4OdHe6w7BOLHeW3OE8I5XvSkegu9MdhnVkubHkDqeMWL4r+Ti4sugOQ7uw5D4GtO5Ry3c+Aj3w
        pffzwXJmCU+HfGF5b9FPvMbwzqLD6XujG+Z+9DSrBxol/K+1BXA/AAAAAAAAAAAAAAAAAAAAAIA6u90f
        BdV5rj42/4oAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>